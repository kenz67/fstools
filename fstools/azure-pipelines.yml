# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

#https://learn.microsoft.com/en-us/azure/devops/pipelines/create-first-pipeline?view=azure-devops&tabs=net%2Cbrowser

trigger:
- master
- Pipelines

pool:
  name: Default  

variables:
  # solution: '**/*.sln'
  # buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'
    - task: CopyFiles@2
      displayName: Copy Files to Stagin
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/fstools/bin/Release/net8.0'
        contents: '**/*'
        targetFolder: '$(Build.ArtifactStagingDirectory)'

- stage: Deploy
  jobs:
  - job: DeployByFTP
    steps:
    - checkout: none
    - task: FtpUpload@2
      inputs:
        credentialsOption: 'inputs'
        serverUrl: 'ftp://ftp.zaldo.com'
        username: $(ftpUser)
        password: $(ftpPassword)
        rootDirectory: '$(build.artifactStagingDirectory)/website'
        filePatterns: '**'
        remoteDirectory: fstools.zaldo.com
        clean: false
        cleanContents: false
        preservePaths: true
        trustSSL: false
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
 
# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'