@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace fstools.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="fstools.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="css/BootstrapBlazor/js/bootstrap.blazor.bundle.min.js"></script>
    <script>
        window.blazorOpen = (url, target) => {
            window.open(url, target);           
        };

        function scrollIntoView(elementId) {
            var elem = document.getElementById(elementId);
            if (elem) {
                elem.scrollIntoView();
                window.location.hash = elementId;
            }
        }

        function browserVersion()
        {
            var browserAgent = navigator.userAgent;
            var browserName;
            var browserVersion;
            var browserMajorVersion;
            var Offset, OffsetVersion, ix;
            
            // For Chrome
            if ((OffsetVersion = browserAgent.indexOf("Chrome")) != -1 && browserAgent.lastIndexOf("Edg") == -1) {
                browserName = "Chrome";
                browserVersion = browserAgent.substring(OffsetVersion + 7);
            }

            // For Microsoft internet explorer
            else if ((OffsetVersion = browserAgent.indexOf("MSIE")) != -1) {
                browserName = "Microsoft Internet Explorer";
                browserVersion = browserAgent.substring(OffsetVersion + 5);
            }

            // For Firefox
            else if ((OffsetVersion = browserAgent.indexOf("Firefox")) != -1 && browserAgent.lastIndexOf("Seamonkey") == -1) {
                browserName = "Firefox";
            }

            // For Safari
            else if ((OffsetVersion = browserAgent.indexOf("Safari")) != -1 && browserAgent.lastIndexOf("Chrome") == -1) {
                browserName = "Safari";
                browserVersion = browserAgent.substring(OffsetVersion + 7);
                if ((OffsetVersion = browserAgent.indexOf("Version")) != -1)
                    browserVersion = browserAgent.substring(OffsetVersion + 8);
            }

            // For Safari
            else if ((OffsetVersion = browserAgent.indexOf("Edg")) != -1) {
                browserName = "Edge";
                browserVersion = browserAgent.substring(OffsetVersion + 4);
                if ((OffsetVersion = browserAgent.indexOf("Version")) != -1)
                    browserVersion = browserAgent.substring(OffsetVersion + 5);
            }

            // For other browser "name/version" is at the end of userAgent
            else if ((Offset = browserAgent.lastIndexOf(' ') + 1) <
                (OffsetVersion = browserAgent.lastIndexOf('/'))) {
                browserName = browserAgent.substring(Offset, OffsetVersion);
                browserVersion = browserAgent.substring(OffsetVersion + 1);
                if (browserName.toLowerCase() == browserName.toUpperCase()) {
                    browserName = navigator.appName;
                }
            }

            // Trimming the fullVersion string at
            // semicolon/space if present
            if ((ix = browserVersion.indexOf(";")) != -1)
                browserVersion = browserVersion.substring(0, ix);
            if ((ix = browserVersion.indexOf(" ")) != -1)
                browserVersion = browserVersion.substring(0, ix);


            browserMajorVersion = parseInt('' + browserVersion, 10);
            if (isNaN(browserMajorVersion)) {
                browserVersion = '' + parseFloat(navigator.appVersion);
                browserMajorVersion = parseInt(navigator.appVersion, 10);
            }
            return browserName + "," + 
                browserVersion + "," +
                browserMajorVersion + "," +
                navigator.userAgent + ",";           
        }
    </script>
</body>
</html>
